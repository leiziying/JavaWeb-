设想  健忘的科学家  做菜
 菜谱：    程序
 原料：   进程在运行过程中需要的资源（文件，网络）
 做菜的过程：  进程
 计算机科学家： CPU
 先描述，再组织
 进程的属性：
     1.基本信息
          pid(process id)
          用户/名称/关联的程序文件/..
          状态
     2.运行信息
       pc/数据地址/代码地址/资源信息（打开的 文件）
    3.记帐信息
       1.什么时候开始运行2.实际运行时间
       Process  Control Block
       class PCB{
       int pid;
       State state;
       Priority priority;
       address dataZone;
       address codeZone;
       long startAt;
       }
       程序的启动过程（如何从程序变成进程）：
          双击程序（exe）进行启动
          OS:
            1.找到文件，检查文件是否合法（exe）
            2.创建一个PCB对象——描述
               PCB  pcb=new PCB();
            3.为进程分配一个唯一的pid
            4.把程序文件按照指定格式加载到内存中
            5.把pcb对象和之前加载的内容进关联
               pcb.pc=pc;pcb.dataZone=dataZone;
            6.填充基本的记账信息
              pcb.startAt=System.currentTime();
 进程的切换/CPU调度
   健忘的计算机科学家做饭
   PCB记录自己的过程
   扶老婆起来也是一个过程：优先级更高
   常见的发生进程切换到的场景：
   1.有一个更高优先级的进程过来——抢占式OS
   2.任务完成（进程结束）
   3.每个进程都事先分配好时间片，时间到达后，切换
   4.当前进程正在等待一个外部事件——阻塞
切换：上下文 ——保护和恢复
      上下文： pc  其他寄存器

 总结：切换/调度/事件片/上下文的保护和恢复/阻塞

并行vs并行
并发是假同时   并行是真同时
内核态 vs 用户态
进程是系统分配资源的最小单位，线程是系统调度的最小单位，一个进程内的线程之间是可以共享数据的
每个进程至少有一个线程存在，即主线程
线程的创建比进程创建更轻量级
